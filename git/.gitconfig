[alias]
    # launch fzf, use Tab or Shift-Tab to select multiple files
    a = "!git status --short | fzf --multi | awk '{print $2}' | xargs git add"
    d = diff
    sw = switch
    co = checkout
    ci = commit
    cia = commit --all
    deepclean = "!git reset --hard HEAD && git clean -fd"
    ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
    psinit = "!git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)"
    pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
    st = status
    br = "!git branch --all | sed -e 's#remotes/origin/##g' | sort | uniq | awk '!/HEAD/' | fzf | xargs git checkout"
    sl = stash list
    sp = stash push
    bra = "!git branch --all | fzf | xargs git checkout"
    brr = branch --remotes
    brd = "!git push -d origin \"$1\" && git branch -d \"$1\" #"
    brD = "!git push -d origin \"$1\" && git branch -D \"$1\" #"
    bm = branch --merged
    bnm = branch --no-merged
    df = "!git hist | fzf | awk '{print $2}' | xargs -I {} git diff {}^ {}"
    hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
    # git log including which files have been changed
    llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
    ; open = "!git config --get remote.origin.url | sed -Ee 's#(git@|git://)#https://#' -e 's#com:#com/#' -e 's#dev:#dev/#' -e \"s#\.git#/-/tree/$(curbranch)#\" | xargs open -a 'Google Chrome'"
    open = "!git config --get remote.origin.url | sed -Ee 's#(git@|git://)#https://#' -e 's#com:#com/#' -e 's#dev:#dev/#' | xargs open -a 'Google Chrome'"
    rt = reset
    rb = rebase
    rl = reflog --pretty=reflog
    rbc = "!git rebase --onto \"$1\" \"$2\" $(git rev-parse --abbrev-ref HEAD) #"
    lg = lg1 # default git lg behaviour
    lg1 = lg1-specific --all
    lg2 = lg2-specific --all
    lg3 = lg3-specific --all

    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
	count-lines = "! git log --no-merges --author=\"$1\" --pretty=tformat: --numstat | awk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf \"added lines: %s, removed lines: %s, total lines: %s\\n\", add, subs, loc }' #"
	count-files = "! git log --no-merges --author=\"$1\" --pretty= --name-only | sort -u | wc -l #"
[user]
        useConfigOnly = true
[commit]
        gpgsign = false
[gpg]
        program = gpg
[pull]
        ff = only
[init]
        defaultBranch = main
[core]
        pager = delta
	editor = vim
	longpaths = true
[interactive]
        diffFilter = delta --color-only
[delta]
    navigate = true # use n and N to move between diff sections
    light = false
[merge]
    conflictstyle = diff3
    ff = no
[diff]
    colorMoved = default
[pretty]
    reflog = %C(cyan)%cs %C(auto)%h %<|(17)%C(red)%gd %C(reset) %gs (%s)
[color]
	ui = true
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
